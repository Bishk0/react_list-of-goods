{"version":3,"sources":["App.jsx","index.js"],"names":["goodsFromServer","App","state","goods","isStarted","sortBy","optionValue","options","Array","keys","start","setState","sortAlphabetically","sortByLength","reverse","isReversed","handleChange","event","target","value","reset","visibleGoods","this","filter","good","length","sort","a","b","localeCompare","className","map","key","type","onClick","onChange","number","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAkGaC,E,4MA9FbC,MAAQ,CACNC,MAAOH,EACPI,WAAW,EACXC,OAAQ,GACRC,YAAa,G,EAGfC,Q,YAAcC,MAAM,IAAIC,Q,EAExBC,MAAQ,kBAAM,EAAKC,SAAS,CAAEP,WAAW,K,EAEzCQ,mBAAqB,kBAAM,EAAKD,SAAS,CAAEN,OAAQ,c,EAEnDQ,aAAe,kBAAM,EAAKF,SAAS,CAAEN,OAAQ,Y,EAE7CS,QAAU,kBAAM,EAAKH,UAAS,SAAAT,GAAK,MAAK,CAAEa,YAAab,EAAMa,gB,EAE7DC,aAAe,SAAAC,GAAK,OAAI,EAAKN,SAAS,CAAEL,YAAaW,EAAMC,OAAOC,S,EAElEC,MAAQ,kBAAM,EAAKT,SAAS,CAC1BR,MAAOH,EACPK,OAAQ,GACRU,YAAY,EACZT,YAAa,K,4CAGf,WAAU,IAAD,OACDe,EAAeC,KAAKpB,MAAMC,MAAMoB,QACpC,SAAAC,GAAI,OAAIA,EAAKC,QAAU,EAAKvB,MAAMI,eAkBpC,OAfAe,EAAaK,MAAK,SAACC,EAAGC,GACpB,OAAQ,EAAK1B,MAAMG,QACjB,IAAK,WACH,OAAOsB,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEF,OAASG,EAAEH,OACtB,QACE,OAAO,MAITH,KAAKpB,MAAMa,YACbM,EAAaP,UAIb,yBAAKgB,UAAU,OACZR,KAAKpB,MAAME,UACV,oCACE,sCACA,4BACGiB,EAAaU,KAAI,SAAAP,GAAI,OACpB,wBAAIQ,IAAKR,GAAOA,OAGpB,4BACES,KAAK,SACLC,QAASZ,KAAKR,SAFhB,WAMA,4BACEmB,KAAK,SACLC,QAASZ,KAAKV,oBAFhB,uBAMA,4BACEqB,KAAK,SACLC,QAASZ,KAAKT,cAFhB,kBAMA,4BAAQoB,KAAK,SAASC,QAASZ,KAAKF,OAApC,SACA,4BAAQD,MAAOG,KAAKpB,MAAMI,YAAa6B,SAAUb,KAAKN,cACnDM,KAAKf,QAAQwB,KAAI,SAAAK,GAAM,OACtB,4BAAQjB,MAAOiB,EAAS,EAAGJ,IAAKI,GAASA,EAAS,QAKxD,4BACEH,KAAK,SACLC,QAASZ,KAAKZ,OAFhB,c,GAnFQ2B,aCZlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7e56a7b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends Component {\n  state = {\n    goods: goodsFromServer,\n    isStarted: false,\n    sortBy: '',\n    optionValue: 1,\n  }\n\n  options = [...Array(10).keys()];\n\n  start = () => this.setState({ isStarted: true });\n\n  sortAlphabetically = () => this.setState({ sortBy: 'alphabet' });\n\n  sortByLength = () => this.setState({ sortBy: 'length' });\n\n  reverse = () => this.setState(state => ({ isReversed: !state.isReversed }));\n\n  handleChange = event => this.setState({ optionValue: event.target.value });\n\n  reset = () => this.setState({\n    goods: goodsFromServer,\n    sortBy: '',\n    isReversed: false,\n    optionValue: 1,\n  });\n\n  render() {\n    const visibleGoods = this.state.goods.filter(\n      good => good.length >= this.state.optionValue,\n    );\n\n    visibleGoods.sort((a, b) => {\n      switch (this.state.sortBy) {\n        case 'alphabet':\n          return a.localeCompare(b);\n        case 'length':\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (this.state.isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {this.state.isStarted ? (\n          <>\n            <h1>Goods:</h1>\n            <ul>\n              {visibleGoods.map(good => (\n                <li key={good}>{good}</li>\n              ))}\n            </ul>\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n            <button type=\"button\" onClick={this.reset}>Reset</button>\n            <select value={this.state.optionValue} onChange={this.handleChange}>\n              {this.options.map(number => (\n                <option value={number + 1} key={number}>{number + 1}</option>\n              ))}\n            </select>\n          </>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.start}\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}